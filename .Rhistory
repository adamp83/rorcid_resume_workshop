proj_get()
getwd()
library(rorcid)
library(httpuv)
orcid_auth
orcid_auth()
library(usethis)
usethis::edit_r_environ("project")
install.packages("vitae")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("plyr")
BiocManager::install('vitae')
BiocManager::install('rorcid')
library(rorcid)
?`rorcid-auth`
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
library(rorcid)
library(dplyr)
my_ed <- do.call("bind_rows",
rorcid::orcid_educations("0000-0001-6229-7514")$`0000-0001-6229-7514`$`affiliation-group`$summaries
)
my_ed %>%
detailed_entries(
what = `education-summary.role-title`,
when = glue::glue("{`education-summary.start-date.year.value`} - {`education-summary.end-date.year.value`}"),
with = `education-summary.organization.name`,
where = `education-summary.organization.address.city`
)
# library(tibble)
# tribble(
#   ~ Degree, ~ Year, ~ Institution, ~ Where,
#   "Informal studies", "1889-91", "Flying University", "Warsaw, Poland",
#   "Master of Physics", "1893", "Sorbonne Université", "Paris, France",
#   "Master of Mathematics", "1894", "Sorbonne Université", "Paris, France"
# ) %>%
#   detailed_entries(Degree, Year, Institution, Where)
my_exp <- do.call("bind_rows",
rorcid::orcid_employments("0000-0001-6229-7514")$`0000-0001-6229-7514`$`affiliation-group`$summaries
)
#For the my_exp variable below: if there is no end date on your recent employment, replace `employment-summary.end-date.year.value` with `employment-summary.end-date`.
my_exp %>%
detailed_entries(
what = `employment-summary.role-title`,
when = glue::glue("{`employment-summary.start-date.year.value`} - {`employment-summary.end-date.year.value`}"),
with = `employment-summary.organization.name`,
where = glue::glue("{`employment-summary.organization.address.city`}, {`employment-summary.organization.address.region`}")
)
#tribble(
#  ~ Experience, ~ Year, ~ Institution, ~ Details,
#  "Current Job Title", "Years of Employment", "Organization", #"Job Description",
#  "Previous Job Title", "Years of Employment", "Organization", #"Job Description",
#) %>%
#  detailed_entries(Details, Year, Experience, Institution)
library(rorcid)
library(tidyverse)
out <- works(orcid_id("0000-0001-6229-7514"))
tibble(
Journal = out$`journal-title.value`,
Title = out$title.title.value,
Year = out$`publication-date.year.value`,
DOI = out$url.value
) %>%
detailed_entries(
DOI,
Journal,
Title,
Year
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
oid <- "0000-0001-5836-0250"
my_exp <- do.call("bind_rows",
rorcid::orcid_employments("0000-0001-5836-0250")$`0000-0001-5836-0250`$`affiliation-group`$summaries
)
#For the my_exp variable below: if there is no end date on your recent employment, replace `employment-summary.end-date.year.value` with `employment-summary.end-date`.
my_exp %>%
detailed_entries(
what = `employment-summary.role-title`,
when = glue::glue("{`employment-summary.start-date.year.value`} - {`employment-summary.end-date.year.value`}"),
with = `employment-summary.organization.name`,
where = glue::glue("{`employment-summary.organization.address.city`}, {`employment-summary.organization.address.region`}")
)
#tribble(
#  ~ Experience, ~ Year, ~ Institution, ~ Details,
#  "Current Job Title", "Years of Employment", "Organization", #"Job Description",
#  "Previous Job Title", "Years of Employment", "Organization", #"Job Description",
#) %>%
#  detailed_entries(Details, Year, Experience, Institution)
orcid_auth()
Sys.setenv('ORCID_TOKEN', "06cd7b9a-6754-41e2-863c-7641b23691e4")
Sys.setenv('ORCID_TOKEN' = "06cd7b9a-6754-41e2-863c-7641b23691e4")
BiocManager::install('vitae')
BiocManager::install('rorcid')
tinytex::install_tinytex()
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
# Requirements:
# biocManager::install('vitae')
# .Renviron file containing this line:
#   ORCID_TOKEN="XXXX"
# where the token comes from running
# library(rorcid)
# orcid_auth()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
# My orcid ID:
oid <- "0000-0001-5836-0250"
# Requirements:
# biocManager::install('vitae')
# .Renviron file containing this line:
#   ORCID_TOKEN="XXXX"
# where the token comes from running
# library(rorcid)
# orcid_auth()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
# My orcid ID:
oid <- "0000-0001-5836-0250"
library(rorcid)
library(dplyr)
my_ed <- do.call("bind_rows",
rorcid::orcid_educations("0000-0001-5836-0250")$`0000-0001-5836-0250`$`affiliation-group`$summaries
)
my_ed <- do.call("bind_rows",
rorcid::orcid_educations(oid)$[[oid]]$`affiliation-group`$summaries
my_ed <- do.call("bind_rows",
rorcid::orcid_educations(oid)[[oid]]$`affiliation-group`$summaries
)
my_ed %>%
detailed_entries(
what = `education-summary.role-title`,
when = glue::glue("{`education-summary.start-date.year.value`} - {`education-summary.end-date.year.value`}"),
with = `education-summary.organization.name`,
where = `education-summary.organization.address.city`
)
my_exp <- do.call("bind_rows",
rorcid::orcid_employments(oid)[[oid]]$`affiliation-group`$summaries
)
my_exp <- do.call("bind_rows",
rorcid::orcid_employments(oid)[[oid]]$`affiliation-group`$summaries
)
#For the my_exp variable below: if there is no end date on your recent employment, replace `employment-summary.end-date.year.value` with `employment-summary.end-date`.
my_exp %>%
detailed_entries(
what = `employment-summary.role-title`,
when = glue::glue("{`employment-summary.start-date.year.value`} - {`employment-summary.end-date.year.value`}"),
with = `employment-summary.organization.name`,
where = glue::glue("{`employment-summary.organization.address.city`}, {`employment-summary.organization.address.region`}")
)
#tribble(
#  ~ Experience, ~ Year, ~ Institution, ~ Details,
#  "Current Job Title", "Years of Employment", "Organization", #"Job Description",
#  "Previous Job Title", "Years of Employment", "Organization", #"Job Description",
#) %>%
#  detailed_entries(Details, Year, Experience, Institution)
library(rorcid)
library(tidyverse)
out <- works(orcid_id(oid))
tibble(
Journal = out$`journal-title.value`,
Title = out$title.title.value,
Year = out$`publication-date.year.value`,
DOI = out$url.value
) %>%
detailed_entries(
Title,
Year,
Journal,
Year,
DOI
)
tibble(
Journal = out$`journal-title.value`,
Title = out$title.title.value,
Year = out$`publication-date.year.value`,
DOI = out$url.value
)
head(out)
?works
View(out)
?orcid_search
orcid_works(oid)[[1]]
x <- orcid_works(oid)[[1]]
x <- orcid_works(oid)
x$`0000-0001-5836-0250`$works$`put-code`
orcid_works(oid, put_code = x$`0000-0001-5836-0250`$works$`put-code`[1])
orcid_works(oid, put_code = x$`0000-0001-5836-0250`$works$`put-code`)
y <- orcid_works(oid, put_code = x$`0000-0001-5836-0250`$works$`put-code`)
View(y$`0000-0001-5836-0250`$works)
# Need to get authors separately:
y <- orcid_works(oid, put_code = out$`put-code`)
out$`put-code` == y$`0000-0001-5836-0250`$works$`work.put-code`
y <- y[[1]]$works
y <- y[match(out$`put-code`, y$`work.put-code`),]
head(y)
x <- out$`put-code`[1]
z <- y[which(y$`work.put-code` == x),]
sapply(out$`put-code`, function(x) {
z <- y[which(y$`work.put-code` == x),]
paste(z$work.contributors.contributor, collapse = ', ')
})
z$work.contributors.contributor
z$work.contributors.contributor
z$work.contributors.contributor[[1]]$`credit-name.value`
sapply(out$`put-code`, function(x) {
z <- y[which(y$`work.put-code` == x),]
paste(z$work.contributors.contributor[[1]]$`credit-name.value`, collapse = ', ')
})
z$work.contributors.contributor
out$authors <- sapply(out$`put-code`, function(x) {
z <- y[which(y$`work.put-code` == x),]
paste(z$work.contributors.contributor[[1]]$`credit-name.value`, collapse = ', ')
})
library(rorcid)
library(tidyverse)
out <- works(orcid_id(oid))
tibble(
Journal = out$`journal-title.value`,
Title = out$title.title.value,
Year = out$`publication-date.year.value`,
DOI = out$url.value
)
# Need to get authors separately:
y <- orcid_works(oid, put_code = out$`put-code`)
y <- y[[1]]$works
y <- y[match(out$`put-code`, y$`work.put-code`),]
out$authors <- sapply(out$`put-code`, function(x) {
z <- y[which(y$`work.put-code` == x),]
paste(z$work.contributors.contributor[[1]]$`credit-name.value`, collapse = ', ')
})
out %>%
detailed_entries(
Title,
Year,
authors,
Journal,
# Year,
DOI
)
View(out)
library(rorcid)
library(tidyverse)
out <- works(orcid_id(oid))
# Need to get authors separately:
y <- orcid_works(oid, put_code = out$`put-code`)
y <- y[[1]]$works
y <- y[match(out$`put-code`, y$`work.put-code`),]
out$authors <- sapply(out$`put-code`, function(x) {
z <- y[which(y$`work.put-code` == x),]
paste(z$work.contributors.contributor[[1]]$`credit-name.value`, collapse = ', ')
})
tibble(
Journal = out$`journal-title.value`,
Title = out$title.title.value,
Year = out$`publication-date.year.value`,
DOI = out$url.value,
Authors = out$authors
) %>%
detailed_entries(
Title,
Year,
Authors,
Journal,
# Year,
DOI
)
out$type
View(y)
my_ed <- do.call("bind_rows",
rorcid::orcid_educations(oid)[[oid]]$`affiliation-group`$summaries
)
glue::glue("{`education-summary.start-date.year.value`} - {`education-summary.end-date.year.value`}")
my_ed %>%
detailed_entries(
what = `education-summary.role-title`,
when = glue::glue("{`education-summary.start-date.year.value`} - {`education-summary.end-date.year.value`}"),
with = `education-summary.organization.name`,
where = `education-summary.organization.address.city`
)
?glue
my_ed$`education-summary.end-date.year.value`
my_exp <- do.call("bind_rows",
rorcid::orcid_employments(oid)[[oid]]$`affiliation-group`$summaries
)
my_exp$`employment-summary.end-date.year.value`
library(rorcid)
library(tidyverse)
out <- works(orcid_id(oid))
y <- y[match(out$`put-code`, y$`work.put-code`),]
x <- out$`put-code`[1]
x
z <- y[which(y$`work.put-code` == x),]
auths <- z$work.contributors.contributor[[1]]$`credit-name.value`
x <- out$`put-code`[2]
z <- y[which(y$`work.put-code` == x),]
auths <- z$work.contributors.contributor[[1]]$`credit-name.value`
mypos <- grep('Pennycuick', auths)
maxlen <- max(5, mypos)
